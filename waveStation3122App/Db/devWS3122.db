
record(stringin,"$(P)$(R)IDN")
{
    field(DTYP,"asyn WS3122")
    field(INP,"@asyn($(PORT), $(ADDR))GET_IDN")
    field(PINI,"YES")
}

record(mbbi, "$(P)$(R)WaveType")
{
    field(DESC, "Define Wave Type")
    field(DTYP, "Soft Channel")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "BSWV")
    field(ONST, "BTWV")
    field(TWST, "ARWV")
    field(THST, "MDWV")
    field(FRST, "INVALID")
    field(FVST, "INVALID")
    field(SXST, "INVALID")
    field(SVST, "INVALID")
    field(EIST, "INVALID")
    field(NIST, "INVALID")
    field(TESV, "INVALID")
    field(ELSV, "INVALID")
    field(TVSV, "INVALID")
    field(TTSV, "INVALID")
    field(FTSV, "INVALID")
    field(FTSV, "INVALID")
    field(FFSV, "INVALID")
    field(UNSV, "INVALID")
}

record(bi, "$(P)$(R)Channel") 
{
    field(DTYP, "Soft Channel")
    field(ZNAM, "C1")
    field(ONAM, "C2")
}


# record(mbbi,"$(P)$(R)BasicWVTP")
# {
#     field(DESC, "Define Basice Wave Type")
#     field(DTYP, "Soft Channel")
#     field(ZRVL, "0")
#     field(ONVL, "1")
#     field(TWVL, "2")
#     field(THVL, "3")
#     field(FRVL, "4")
#     field(FVVL, "5")
#     field(SXVL, "6")
#     field(ZRST, "SQUARE")
#     field(ONST, "SINE")
#     field(TWST, "RAMP")
#     field(THST, "PULSE")
#     field(FRST, "NOISE")
#     field(FVST, "ARB")
#     field(SXST, "DC")
#     field(SVST, "INVALID")
#     field(EIST, "INVALID")
#     field(NIST, "INVALID")
#     field(TESV, "INVALID")
#     field(ELSV, "INVALID")
#     field(TVSV, "INVALID")
#     field(TTSV, "INVALID")
#     field(FTSV, "INVALID")
#     field(FTSV, "INVALID")
#     field(FFSV, "INVALID")
#     field(UNSV, "INVALID")
# }



record(ai,"$(P)$(R)Freq")
{
    field(DTYP, "Soft Channel")
    field(EGU,  "HZ")
}


# record(ai,"$(P):PRES") {
# 	field(DTYP,"asyn WS3122")
# 	field(SCAN,"2 second")
# 	field(INP,"@asyn($(PORT) $(ADDR))GET_PRESSURE")
# 	field(PREC,"3")
# 	field(EGU,"Torr")
#         field(FLNK,"$(P):STATUS PP MS")
# }
# record(bi,"$(P):STATUS") {
# 	field(DTYP,"asyn WS3122")
# 	field(INP,"@asyn($(PORT) $(ADDR))GET_SENSOR")
#         field(ZSV,"MAJOR")
#         field(ZNAM,"Off")
#         field(ONAM,"On")
#         field(FLNK,"$(P):SP1S PP MS")
# }
# record(bi,"$(P):SP1S") {
# 	field(DTYP,"asyn WS3122")
# 	field(INP,"@asyn($(PORT) $(ADDR))GET_SPS1")
#         field(ZSV,"MAJOR")
#         field(ZNAM,"Off")
#         field(ONAM,"On")
#        field(FLNK,"$(P):SP2S PP MS")
# }
# record(bi,"$(P):SP2S") {
# 	field(DTYP,"asyn WS3122")
# 	field(INP,"@asyn($(PORT) $(ADDR))GET_SPS2")
#         field(ZSV,"MAJOR")
#         field(ZNAM,"Off")
#         field(ONAM,"On")
#         field(FLNK,"$(P):UNIT PP MS")
# }

# record(ai,"$(P):SP1V") {
# 	field(DTYP,"asyn WS3122")
# 	field(SCAN,"10 second")
# 	field(PREC,"1")
# 	field(INP,"@asyn($(PORT) $(ADDR))GET_SPVAL1")
#         field(FLNK,"$(P):SP2V PP MS")
# }
# record(ai,"$(P):SP2V") {
# 	field(DTYP,"asyn WS3122")
# 	field(PREC,"1")
# 	field(INP,"@asyn($(PORT) $(ADDR))GET_SPVAL2")
# }

# record(bo,"$(P):START") {
# 	field(DTYP,"asyn WS3122")
# 	field(OUT,"@asyn($(PORT) $(ADDR))SET_SENSOR")
#         field(ZSV,"MAJOR")
#         field(ZNAM,"STOP")
#         field(ONAM,"START")
# }

# record(mbbo,"$(P):SUNIT") {
# 	field(DTYP,"asyn WS3122")
# 	field(OUT,"@asyn($(PORT) $(ADDR))SET_UNIT")
#         field(ZRVL,"0")
#         field(ONVL,"1")
#         field(TWVL,"2")
#         field(ZRST,"bar")
#         field(ONST,"Torr")
#         field(TWST,"Pascal")
#         field(FLNK,"$(P):UNIT PP MS")
# }
# record(ao,"$(P):SET1") {
# 	field(DTYP,"asyn WS3122")
#         field(OMSL,"supervisory")
# 	field(PREC,"1")
# 	field(OUT,"@asyn($(PORT) $(ADDR))SET_SP1")
# 	field(VAL,"1.0E-06")
#         field(FLNK,"$(P):SP1V PP MS")
# }

# record(ao,"$(P):SET2") {
# 	field(DTYP,"asyn WS3122")
#         field(OMSL,"supervisory")
# 	field(PREC,"1")
# 	field(OUT,"@asyn($(PORT) $(ADDR))SET_SP2")
# 	field(VAL,"1.0E-06")
#         field(FLNK,"$(P):SP2V PP MS")
# }


