

## GATE_NCYC

record(bo, "$(P)$(R)BurstGateNcyc")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_GATE_NCYC")
    field(ZNAM, "GATE")
    field(ONAM, "NCYC")
    field( VAL, 1)
}

record(bi, "$(P)$(R)BurstGateNcyc_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_GATE_NCYC")
    field(ZNAM, "GATE")
    field(ONAM, "NCYC")
    field(SCAN, "I/O Intr")
}



## MTRIG

record(bo, "$(P)$(R)BurstManualTrigger")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_MTRIG")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field( VAL, 0)
}

record(bi, "$(P)$(R)BurstManualTrigger_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_MTRIG")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(SCAN, "I/O Intr")
}



record(mbbo, "$(P)$(R)BurstTriggerSrc")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field( OUT, "@asyn($(PORT),0,0) PAR_BURST_TRSR")
   field(ZRST, "EXT")
   field(ZRVL, "0")
   field(ONST, "INT")
   field(ONVL, "1")
   field(TWST, "MAN")
   field(TWVL, "2")
   field(THSV, "INVALID")
   field(FRSV, "INVALID")
   field(FVSV, "INVALID")
   field(SXSV, "INVALID")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field( VAL, "0")
}

record(mbbi, "$(P)$(R)BurstTriggerSrc_RBV")
{
   field(DTYP, "asynInt32")
   field( INP, "@asyn($(PORT),0,0)PAR_BURST_TRSR")
   field(ZRST, "EXT")
   field(ZRVL, "0")
   field(ONST, "INT")
   field(ONVL, "1")
   field(TWST, "MAN")
   field(TWVL, "2")
   field(THSV, "INVALID")
   field(FRSV, "INVALID")
   field(FVSV, "INVALID")
   field(SXSV, "INVALID")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)BurstTriggerMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field( OUT, "@asyn($(PORT),0,0) PAR_BURST_TRMD")
   field(ZRST, "RISE")
   field(ZRVL, "0")
   field(ONST, "FALL")
   field(ONVL, "1")
   field(TWST, "OFF")
   field(TWVL, "2")
   field(THSV, "INVALID")
   field(FRSV, "INVALID")
   field(FVSV, "INVALID")
   field(SXSV, "INVALID")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field( VAL, "0")
}

record(mbbi, "$(P)$(R)BurstTriggerMode_RBV")
{
   field(DTYP, "asynInt32")
   field( INP, "@asyn($(PORT),0,0) PAR_BURST_TRMD")
   field(ZRST, "RISE")
   field(ZRVL, "0")
   field(ONST, "FALL")
   field(ONVL, "1")
   field(TWST, "OFF")
   field(TWVL, "2")
   field(THSV, "INVALID")
   field(FRSV, "INVALID")
   field(FVSV, "INVALID")
   field(SXSV, "INVALID")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field(SCAN, "I/O Intr")
}



## PLRT 

record(bo, "$(P)$(R)BurstPolarity")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_PLRT")
    field(ZNAM, "NEG")
    field(ONAM, "POS")
    field( VAL, 0)
}

record(bi, "$(P)$(R)BurstPolarity_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_PLRT")
    field(ZNAM, "NEG")
    field(ONAM, "POS")
    field(SCAN, "I/O Intr")
}



## EDGE 

record(bo, "$(P)$(R)BurstEdge")
{
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_EDGE")
    field(ZNAM, "RISE")
    field(ONAM, "FALL")
    field( VAL, 0)
}

record(bi, "$(P)$(R)BurstEdge_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_EDGE")
    field(ZNAM, "RISE")
    field(ONAM, "FALL")
    field(SCAN, "I/O Intr")
}



## Burst Period 1 uS to 1000S

record(ao, "$(P)$(R)BurstPeriod")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_PERIOD")
    field(DRVL, 1E-6)
    field(DRVH, 1000)
    field( VAL, 1)
    field( EGU, "S")
}

record(ai, "$(P)$(R)BurstPeriod_RBV")
{
    field(DTYP, "asynFloat64")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_PERIOD")
    field(SCAN, "I/O Intr")
}




## Burst Start Phase
## [0,360]
record(ao, "$(P)$(R)BurstStartPhase")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_START_PHASE")
    field(DRVL, 0)
    field(DRVH, 360)
    field( VAL, 0)
}

record(ai, "$(P)$(R)BurstStartPhase_RBV")
{
    field(DTYP, "asynFloat64")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_START_PHASE")
    field(SCAN, "I/O Intr")
}




## BTWV : Delay
## 
record(ao, "$(P)$(R)BurstDelay")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_DELAY")
    field(DRVL, 0)
    field( EGU, "S")
}

record(ai, "$(P)$(R)BurstDelay_RBV")
{
    field(DTYP, "asynFloat64")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_DELAY")
    field(SCAN, "I/O Intr")
}




## BTWV : Cycle Time
## 
record(ao, "$(P)$(R)BurstCycleTime")
{
    field(PINI, "YES")
    field(DTYP, "asynFloat64")
    field( OUT, "@asyn($(PORT),0,0) PAR_BURST_CYCLE_TIME")
    field(DRVL, 1)
    field(DRVH, 50000)
    field( EGU, "Hz")
}

record(ai, "$(P)$(R)BurstCycleTime_RBV")
{
    field(DTYP, "asynFloat64")
    field( INP, "@asyn($(PORT),0,0) PAR_BURST_CYCLE_TIME")
    field(SCAN, "I/O Intr")
}

