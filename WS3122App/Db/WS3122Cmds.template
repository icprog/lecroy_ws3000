
record(mbbo, "$(P)$(R)HeaderPath")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field( OUT, "@asyn($(PORT),0,0) PAR_HEADER_PATH")
   field(ZRST, "C1")
   field(ZRVL, "0")
   field(ONST, "C2")
   field(ONVL, "1")
   field(TWST, "M1")
   field(TWVL, "2")
   field(THST, "M2")
   field(THVL, "3")
   field(FRST, "M3")
   field(FRVL, "4")
   field(FVST, "M4")
   field(FVVL, "5")
   field(SXST, "M5")
   field(SXVL, "6")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field( VAL, "0")
}

record(mbbi, "$(P)$(R)HeaderPath_RBV")
{
   field(DTYP, "asynInt32")
   field( INP, "@asyn($(PORT),0,0) PAR_HEADER_PATH")
   field(ZRST, "C1")
   field(ZRVL, "0")
   field(ONST, "C2")
   field(ONVL, "1")
   field(TWST, "M1")
   field(TWVL, "2")
   field(THST, "M2")
   field(THVL, "3")
   field(FRST, "M3")
   field(FRVL, "4")
   field(FVST, "M4")
   field(FVVL, "5")
   field(SXST, "M5")
   field(SXVL, "6")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field(SCAN, "I/O Intr")
}



record(mbbo, "$(P)$(R)Header")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field( OUT, "@asyn($(PORT),0,0) PAR_HEADER")
   field(ZRST, "ARWV")
   field(ZRVL, "0")
   field(ONST, "BSWV")
   field(ONVL, "1")
   field(TWST, "BTWV")
   field(TWVL, "2")
   field(THST, "MDWV")
   field(THVL, "3")
   field(FRST, "SWWV")
   field(FRVL, "4")
   field(FVSV, "INVALID")
   field(SXSV, "INVALID")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field( VAL, "1")
}

record(mbbi, "$(P)$(R)Header_RBV")
{
   field(DTYP, "asynInt32")
   field( INP,  "@asyn($(PORT),0,0) PAR_HEADER")
   field(ZRST, "ARWV")
   field(ZRVL, "0")
   field(ONST, "BSWV")
   field(ONVL, "1")
   field(TWST, "BTWV")
   field(TWVL, "2")
   field(THST, "MDWV")
   field(THVL, "3")
   field(FRST, "SWWV")
   field(FRVL, "4")
   field(FVSV, "INVALID")
   field(SXSV, "INVALID")
   field(SVSV, "INVALID")
   field(EISV, "INVALID")
   field(NISV, "INVALID")
   field(TESV, "INVALID")
   field(ELSV, "INVALID")
   field(TVSV, "INVALID")
   field(TTSV, "INVALID")
   field(FTSV, "INVALID")
   field(FFSV, "INVALID")
   field(UNSV, "INVALID")
   field(SCAN, "I/O Intr")
}





record(bo, "$(P)$(R)SetWaveType")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_SET_WAVE_TYPE")
}


# record(bo, "$(P)$(R)Run")
# {
#     field(PINI,  "1")
#     field(DTYP, "asynInt32")
#     field(OUT,  "@asyn($(PORT),0,0) CMD_OUTPUT")
#     field(ZNAM, "Stop")
#     field(ONAM, "Run")
# }

# record(bi, "$(P)$(R)Run_RBV")
# {
#     field(PINI, "1")
#     field(DTYP, "asynInt32")
#     field(INP,  "@asyn($(PORT),0,0) CMD_OUT")
#     field(ZNAM, "Done")
#     field(ZSV,  "NO_ALARM")
#     field(ONAM, "Running")
#     field(OSV,  "MINOR")
#     field(SCAN, "I/O Intr")
# }





## OUTP - Output Command

record(bo, "$(P)$(R)Output")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_OUTPUT")
    field(ZNAM, "ON")
    field(ONAM, "OFF")
}

record(bi, "$(P)$(R)Output_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_OUTPUT")
    field(ZNAM, "ON")
    field(ONAM, "OFF")
    field(SCAN, "I/O Intr")
}




## OUTP LOAD - Output Command
## 50 : low-impedance (50 Ohm)
## HZ : high-impedance 
record(bo, "$(P)$(R)OutputLoad")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_OUTPUT_LOAD")
    field(ZNAM, "50")
    field(ONAM, "HZ")
}

record(bi, "$(P)$(R)OutputLoad_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_OUTPUT_LOAD")
    field(ZNAM, "50")
    field(ONAM, "HZ")
    field(SCAN, "I/O Intr")
}




## OUTP PLRT - Output Parameter
## NOR  : Normal Polarity
## INVT : Inverted Polarity

record(bo, "$(P)$(R)OutputPolarity")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_OUTPUT_POLARITY")
    field(ZNAM, "NOR")
    field(ONAM, "INVT")
}

record(bi, "$(P)$(R)OutputPolarity_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_OUTPUT_POLARITY")
    field(ZNAM, "NOR")
    field(ONAM, "INVT")
    field(SCAN, "I/O Intr")
}

## STATE - 

record(bo, "$(P)$(R)WaveState")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_WAVE_STATE")
    field(ZNAM, "ON")
    field(ONAM, "OFF")
}

record(bi, "$(P)$(R)State_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_WAVE_STATE")
    field(ZNAM, "ON")
    field(ONAM, "OFF")
    field(SCAN, "I/O Intr")
}
