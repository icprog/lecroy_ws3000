
record(stringin, "$(P)$(R)DevManufacturer_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0) DEV_MANUFACTURER")
   field( VAL, "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DevModel_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0) DEV_MODEL")
   field( VAL, "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DevSerialNumber_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0) DEV_SERIAL_NUMBER")
   field( VAL, "Unknown")
   field(SCAN, "I/O Intr")
}


record(stringout, "$(P)$(R)DevIDN")
{
    field(DTYP, "asynOctetWrite")
    field( OUT, "@asyn($(PORT),0,0)DEV_IDN")
}  


record(waveform, "$(P)$(R)DevIDN_WF_RBV")
{
    field(DTYP, "asynOctetRead")
    field(FTVL, "CHAR")
    field(NELM, 512)
    field( INP, "@asyn($(PORT),0,0)DEV_IDN")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DevIDN_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0)DEV_IDN")
   field(SCAN, "I/O Intr")
}


record (stringin, "$(P)$(R)HeaderPath")
{
    field(DTYP, "asynOctetRead")
    field( INP, "@asyn($(PORT),0,0) CMD_HEADER_PATH")
    field(SCAN, "I/O Intr")
}

record (stringout, "$(P)$(R)SetHeaderPath") 
{
    field( VAL, "C1")
    field( OUT, "$(P)$(R)HeaderPath PP")
    field(PINI, "YES")
}


## ROSC - Clock Source

record(bo, "$(P)$(R)ROSC")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_CLOCK_SOURCE")
    field(ZNAM, "INT")
    field(ONAM, "EXT")
}

record(bi, "$(P)$(R)ROSC_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_CLOCK_SOURCE")
    field(ZNAM, "INT")
    field(ONAM, "EXT")
    field(SCAN, "I/O Intr")
}



## INVT - Phase 

record(bo, "$(P)$(R)PhaseInvert")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_PHASE_INVERT")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(FLNK, "$(P)$(R)PhaseInvert_RBV")
 
}

record(bi, "$(P)$(R)PhaseInvert_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_PHASE_INVERT")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(P)$(R)PhaseInvert_RBV_")
}

## Until the proper readback from the device,
## it doesn't work as expected. Maybe asyn doesn't need it..
## 
record(longout, "$(P)$(R)PhaseInvert_RBV_")
{
    field( DOL, "$(P)$(R)PhaseInvert_RBV NPP")
    field(OMSL, "closed_loop")
    field( OUT, "$(P)$(R)PhaseInvert NPP")
}



# ## 
# record(mbbo, "$(P)$(R)OUTP")
# {
#    field(PINI, "YES")
#    field(DTYP, "asynInt32")
#    field( OUT,  "@asyn($(PORT),0,0) CMD_OUTPUT")
#    field(ZRST, "ONMSingle")
#    field(ZRVL, "0")
#    field(ONST, "Multiple")
#    field(ONVL, "1")
#    field(TWST, "Continuous")
#    field(TWVL, "2")
#    field(VAL,  "2")
#    info(autosaveFields, "VAL")
# }

# record(mbbi, "$(P)$(R)ImageMode_RBV")
# {
#    field(DTYP, "asynInt32")
#    field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))IMAGE_MODE")
#    field(ZRST, "Single")
#    field(ZRVL, "0")
#    field(ONST, "Multiple")
#    field(ONVL, "1")
#    field(TWST, "Continuous")
#    field(TWVL, "2")
#    field(SCAN, "I/O Intr")
# }
