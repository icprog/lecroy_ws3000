
record(stringin, "$(P)$(R)DevManufacturer_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0) DEV_MANUFACTURER")
   field( VAL, "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DevModel_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0) DEV_MODEL")
   field( VAL, "Unknown")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DevSerialNumber_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0) DEV_SERIAL_NUMBER")
   field( VAL, "Unknown")
   field(SCAN, "I/O Intr")
}


record(stringout, "$(P)$(R)DevIDN")
{
    field(DTYP, "asynOctetWrite")
    field( OUT, "@asyn($(PORT),0,0)DEV_IDN")
}  


# record(waveform, "$(P)$(R)DevIDN_WF_RBV")
# {
#     field(DTYP, "asynOctetRead")
#     field(FTVL, "CHAR")
#     field(NELM, 512)
#     field( INP, "@asyn($(PORT),0,0)DEV_IDN")
#     field(SCAN, "I/O Intr")
# }

record(stringin, "$(P)$(R)DevIDN_RBV")
{
   field(DTYP, "asynOctetRead")
   field( INP, "@asyn($(PORT),0,0)DEV_IDN")
   field(SCAN, "I/O Intr")
}


record(stringout, "$(P)$(R)HeaderPath")
{
    field(PINI, "YES")
    field(DTYP, "asynOctetWrite")
    field( OUT, "@asyn($(PORT),0,0) PAR_HEADER_PATH")
    field( VAL, "C1")
}

record(stringin, "$(P)$(R)HeaderPath_RBV")
{
    field(DTYP, "asynOctetRead")
    field( INP, "@asyn($(PORT),0,0) PAR_HEADER_PATH")
    field(SCAN, "I/O Intr")
}




## ROSC - Clock Source

record(bo, "$(P)$(R)ROSC")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_CLOCK_SOURCE")
    field(ZNAM, "INT")
    field(ONAM, "EXT")
}

record(bi, "$(P)$(R)ROSC_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_CLOCK_SOURCE")
    field(ZNAM, "INT")
    field(ONAM, "EXT")
    field(SCAN, "I/O Intr")
}



## INVT - Phase 

record(bo, "$(P)$(R)PhaseInvert")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_PHASE_INVERT")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
#    field(FLNK, "$(P)$(R)PhaseInvert_RBV")
 
}

record(bi, "$(P)$(R)PhaseInvert_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_PHASE_INVERT")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(SCAN, "I/O Intr")
#    field(FLNK, "$(P)$(R)PhaseInvert_RBV_")
}

## Until the proper readback from the device,
## it doesn't work as expected. Maybe asyn doesn't need it..
## 
record(longout, "$(P)$(R)PhaseInvert_RBV_")
{
    field( DOL, "$(P)$(R)PhaseInvert_RBV NPP")
    field(OMSL, "closed_loop")
    field( OUT, "$(P)$(R)PhaseInvert NPP")
}



# ## SCSV - Screen Save Command
record(mbbo, "$(P)$(R)ScreenSave")
{
    field(DTYP, "asynInt32")
    field( OUT, "@asyn($(PORT),0,0) CMD_SCREEN_SAVE")
    field(ZRVL,     0)
    field(ONVL,     5)
    field(TWVL,    15)
    field(THVL,    30)
    field(FRVL,    60)
    field(FVVL,   120)
    field(SXVL,   300)
    field(ZRST, "OFF")
    field(ONST,   "5")
    field(TWST,  "15")
    field(THST,  "30")
    field(FRST,  "60")
    field(FVST, "120")
    field(SXST, "300")
    field(SVSV, "INVALID")
    field(EISV, "INVALID")
    field(NISV, "INVALID")
    field(TESV, "INVALID")
    field(ELSV, "INVALID")
    field(TVSV, "INVALID")
    field(TTSV, "INVALID")
    field(FTSV, "INVALID")
    field(FFSV, "INVALID")
    field(UNSV, "INVALID")
    field(IVOA, "Don't drive outputs")
#    field(FLNK, "$(P)$(R)ScreenSave_RBV")
}


record(mbbi, "$(P)$(R)ScreenSave_RBV")
{
    field(DTYP, "asynInt32")
    field( INP, "@asyn($(PORT),0,0) CMD_SCREEN_SAVE")
    field(ZRVL,     0)
    field(ONVL,     5)
    field(TWVL,    15)
    field(THVL,    30)
    field(FRVL,    60)
    field(FVVL,   120)
    field(SXVL,   300)
    field(ZRST, "OFF")
    field(ONST,   "5")
    field(TWST,  "15")
    field(THST,  "30")
    field(FRST,  "60")
    field(FVST, "120")
    field(SXST, "300")
    field(SVSV, "INVALID")
    field(EISV, "INVALID")
    field(NISV, "INVALID")
    field(TESV, "INVALID")
    field(ELSV, "INVALID")
    field(TVSV, "INVALID")
    field(TTSV, "INVALID")
    field(FTSV, "INVALID")
    field(FFSV, "INVALID")
    field(UNSV, "INVALID")
    field(SCAN, "I/O Intr")
}


